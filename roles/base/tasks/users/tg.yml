- name: users | tg | create group
  tags: groups,tg,users
  become: yes
  become_user: "velociraptor"
  group:
    name: wheel
    state: present

- name: users | tg | create user
  tags: tg,sudo,users
  user:
    name: tg
    group: tg
    groups: wheel,users,{{ sudo_group }}
    state: present
    comment: "Thomas Groch"
    password: "{{ tg_passwd }}"
    shell: /usr/bin/zsh

- name: users | tg | tg | add sudoers file
  tags: tg,settings,velociraptor,sudo,system,users
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-tg
    line: 'tg ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    validate: 'visudo -cf %s'

- name: users | tg | create .ssh directory
  tags: dotfiles,tg,ssh,users
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: tg
    group: tg
    mode: 0700
  with_items:
    - { dir: '/home/tg/.ssh' }

- name: users | tg | add public key
  tags: dotfiles,tg,ssh,ssh-keys,users
  authorized_key:
    user: tg
    key: "{{ item }}"
  with_file:
    - users/tg/ssh/tgroch_id_rsa.pub
    # - users/tg/ssh/tg_id_ed25519.pub

# ensure git repositories
- name: Git | Checkout git bare repository
  git:
    repo: "{{ upstream }}"
    dest: "{{ repo_dir }}"
    bare: yes
    update: no
    track_submodules: yes
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure repository set properly
  lineinfile: dest={{ repo_dir }}/config
              regexp="^\s*bare.?="
              line="    bare = false"
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure proper worktree
  lineinfile: dest={{ repo_dir }}/config
              regexp='^\s*worktree.?='
              line="    worktree = {{ work_dir }}"
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure work dir
  file: path={{ work_dir }} state=directory
        mode=0775
  tags: dotfiles,tg,users,barerepo


# fetch/checkout
- name: Git | Fetching new changes
  shell: chdir={{ repo_dir }} git fetch --prune && git fetch --tags
  tags: dotfiles,tg,users,barerepo

- name: Git | Checkout version
  command: "chdir={{ work_dir }} git --git-dir={{ repo_dir }} checkout -f {{ version | default('HEAD') }}"
  tags: dotfiles,tg,users,barerepo


# git submodules
- name: Git | Submodules | Syncing
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} submodule sync
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Submodules | Updating
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} submodule update -f --init --recursive
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Ensure untracked files are hidden
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} config --local status.showUntrackedFiles no
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Create symbolic link
  file:
    src: "{{ repo_dir }}"
    dest: "{{ work_dir }}.git"
    owner: tg
    group: wheel
    state: link
  tags: dotfiles,tg,users,barerepo

# - name: users | tg | create config directories
#   tags: dotfiles,tg,tmux,users,vim,zsh
#   file:
#     path: /home/tg/{{ item.dir }}
#     state: directory
#     owner: tg
#     group: tg
#     mode: 0700
#   with_items:
#     - { dir: '.bash' }
#     - { dir: '.config' }
#     - { dir: '.config/htop' }
#     - { dir: '.config/mc' }
#     - { dir: '.tmux' }
#     - { dir: '.tmux/config' }
#     - { dir: '.tmux/plugins' }
#     - { dir: '.vim' }
#     - { dir: '.vim/autoload' }
#     - { dir: '.vim/bundle' }
#     - { dir: '.vim/colors' }
#     - { dir: '.vim/ftplugin' }
#     - { dir: '.zsh' }

# - name: users | tg | copy tmux config (server version)
#   tags: dotfiles,users,tg,tmux,users,vim,zsh
#   copy:
#     src: users/tg/tmux/tmux.conf.server
#     dest: /home/tg/.tmux.conf
#     owner: tg
#     group: tg
#     mode: 0600
#   when: "'server' not in group_names"

# - name: users | tg | copy tmux config (workstation version)
#   tags: dotfiles,users,tg,tmux,users,vim,zsh
#   copy:
#     src: users/tg/tmux/tmux.conf.workstation
#     dest: /home/tg/.tmux.conf
#     owner: tg
#     group: tg
#     mode: 0600
#   when: "'server' in group_names"

# - name: users | tg | copy dotfiles
#   tags: dotfiles,users,tg,tmux,users,vim,zsh
#   copy:
#     src: users/tg/{{ item.src }}
#     dest: /home/tg/{{ item.dest }}
#     owner: tg
#     group: tg
#     mode: 0600
#   with_items:
#     - { src: 'bash/bash_aliases', dest: '.bash/bash_aliases' }
#     - { src: 'bash/bash_profile', dest: '.bash_profile' }
#     - { src: 'bash/bash_prompt', dest: '.bash/bash_prompt' }
#     - { src: 'bash/bash_functions', dest: '.bash/bash_functions' }
#     - { src: 'bash/bashrc', dest: '.bashrc' }
#     - { src: 'bash/profile', dest: '.profile' }
#     - { src: 'git/gitconfig', dest: '.gitconfig' }
#     - { src: 'htop/htoprc', dest: '.config/htop/htoprc' }
#     - { src: 'inputrc', dest: '.inputrc' }
#     - { src: 'mc/mc.ini', dest: '.config/mc/ini' }
#     - { src: 'vim/vimrc', dest: '.vimrc' }
#     - { src: 'zsh/zshrc', dest: '.zshrc' }

# - name: users | tg | clone tmux-completion plugin repository
#   tags: dotfiles,tg,users,tmux
#   git:
#     repo: https://github.com/srsudar/tmux-completion.git
#     dest: /home/tg/.tmux/plugins/completion
#     force: yes
#   notify: update_tmux_plugin_perms

# - name: users | tg | clone tmux-continuum plugin repository
#   tags: dotfiles,tg,users,tmux
#   git:
#     repo: https://github.com/tmux-plugins/tmux-continuum
#     dest: /home/tg/.tmux/plugins/continuum
#     force: yes
#   notify: update_tmux_plugin_perms

# - name: users | tg | clone tmux-resurrect plugin repository
#   tags: dotfiles,tg,users,tmux
#   git:
#     repo: https://github.com/tmux-plugins/tmux-resurrect
#     dest: /home/tg/.tmux/plugins/resurrect
#     force: yes
#   notify: update_tmux_plugin_perms

# - name: users | tg | copy individual zsh config files
#   tags: dotfiles,tg,users,zsh
#   copy:
#     src: users/tg/zsh/{{ item.src }}
#     dest: /home/tg/.zsh/{{ item.src }}
#     owner: tg
#     group: tg
#     mode: 0600
#   with_items:
#     - { src: 'aliases.zsh' }
#     - { src: 'bindkey.zsh' }
#     - { src: 'completion.zsh' }
#     - { src: 'exports.zsh' }
#     - { src: 'functions.zsh' }
#     - { src: 'history.zsh' }
#     - { src: 'path.zsh' }
#     - { src: 'plugins.zsh' }
#     - { src: 'prompt.zsh' }
#     - { src: 'setopt.zsh' }
#     - { src: 'theming.zsh' }

# - name: users | tg | copy vim ftype files
#   tags: dotfiles,tg,users,vim
#   copy:
#     src: users/tg/vim/{{ item.src }}
#     dest: /home/tg/.vim/ftplugin/{{ item.src }}
#     owner: tg
#     group: tg
#     mode: 0600
#   with_items:
#     - { src: 'cmake.vim' }
#     - { src: 'cpp.vim' }
#     - { src: 'html.vim' }
#     - { src: 'perl.vim' }
#     - { src: 'python.vim' }
#     - { src: 'ruby.vim' }
#     - { src: 'sql.vim' }
#     - { src: 'xml.vim' }

# - name: users | tg | copy vim color files
#   tags: dotfiles,tg,users,vim
#   copy:
#     src: users/tg/vim/{{ item.src }}
#     dest: /home/tg/.vim/colors/{{ item.src }}
#     owner: tg
#     group: tg
#     mode: 0600
#   with_items:
#     - { src: 'bubblegum-256-dark.vim' }
#     - { src: 'darktango.vim' }
#     - { src: 'jellybeans.vim' }
#     - { src: 'xoria256.vim' }
#     - { src: 'zenburn.vim' }

# - name: users | tg | install pathogen
#   tags: dotfiles,tg,users,vim
#   copy:
#     src: users/tg/vim/{{ item.src }}
#     dest: "{{ item.dest }}"
#     owner: tg
#     group: tg
#     mode: 0700
#   with_items:
#     - { src: 'pathogen.vim', dest: '/home/tg/.vim/autoload/pathogen.vim' }

# - name: users | tg | checkout git repositories
#   tags: git,users,tg
#   become: yes
#   git:
#     repo: "{{ item.repo }}"
#     dest: "{{ item.dest }}"
#     force: yes
#   with_items:
#     - { repo: 'https://github.com/ctrlpvim/ctrlp.vim.git', dest: '/home/tg/.vim/bundle/ctrlp.vim' }
#     - { repo: 'https://github.com/davidhalter/jedi-vim.git', dest: '/home/tg/.vim/bundle/jedi-vim' }
#     - { repo: 'https://github.com/pearofducks/ansible-vim', dest: '/home/tg/.vim/bundle/ansible-vim' }
#     - { repo: 'https://github.com/rhysd/vim-grammarous.git', dest: '/home/tg/.vim/bundle/vim-grammarous' }
#     - { repo: 'https://github.com/ron89/thesaurus_query.vim', dest: '/home/tg/.vim/bundle/thesaurus_query' }
#     - { repo: 'https://github.com/scrooloose/nerdtree.git', dest: '/home/tg/.vim/bundle/nerdtree' }
#     - { repo: 'https://github.com/tpope/vim-obsession.git', dest: '/home/tg/.vim/bundle/vim-obsession' }
#     - { repo: 'https://github.com/vim-syntastic/syntastic.git', dest: '/home/tg/.vim/bundle/syntastic' }
#   notify: update_vim_bundle_perms
