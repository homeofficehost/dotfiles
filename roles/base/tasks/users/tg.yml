- name: users | tg | create group
  tags: groups,tg,users
  become: yes
  become_user: "velociraptor"
  group:
    name: wheel
    state: present

- name: users | tg | create user
  tags: tg,sudo,users
  user:
    name: tg
    group: tg
    groups: wheel,users,{{ sudo_group }}
    state: present
    comment: "Thomas Groch"
    password: "{{ tg_passwd }}"
    shell: /usr/bin/zsh

- name: users | tg | tg | add sudoers file
  tags: tg,settings,velociraptor,sudo,system,users
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-tg
    line: 'tg ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    validate: 'visudo -cf %s'

- name: users | tg | create .ssh directory
  tags: dotfiles,tg,ssh,users
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: tg
    group: tg
    mode: 0700
  with_items:
    - { dir: '/home/tg/.ssh' }

- name: users | tg | add public key
  tags: dotfiles,tg,ssh,ssh-keys,users
  authorized_key:
    user: tg
    key: "{{ item }}"
  with_file:
    - users/tg/ssh/tgroch_id_rsa.pub
    # - users/tg/ssh/tg_id_ed25519.pub

# ensure git repositories
- name: Git | Checkout git bare repository
  git:
    repo: "{{ upstream }}"
    dest: "{{ repo_dir }}"
    bare: yes
    update: no
    track_submodules: yes
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure repository set properly
  lineinfile: dest={{ repo_dir }}/config
              regexp="^\s*bare.?="
              line="    bare = false"
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure proper worktree
  lineinfile: dest={{ repo_dir }}/config
              regexp='^\s*worktree.?='
              line="    worktree = {{ work_dir }}"
  tags: dotfiles,tg,users,barerepo

- name: Git | Ensure work dir
  file: path={{ work_dir }} state=directory
        mode=0775
  tags: dotfiles,tg,users,barerepo


# fetch/checkout
- name: Git | Fetching new changes
  shell: chdir={{ repo_dir }} git fetch --prune && git fetch --tags
  tags: dotfiles,tg,users,barerepo

- name: Git | Checkout version
  command: "chdir={{ work_dir }} git --git-dir={{ repo_dir }} checkout -f {{ version | default('HEAD') }}"
  tags: dotfiles,tg,users,barerepo


# git submodules
- name: Git | Submodules | Syncing
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} submodule sync
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Submodules | Updating
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} submodule update -f --init --recursive
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Ensure untracked files are hidden
  command: chdir={{ work_dir }} git --git-dir={{ repo_dir }} config --local status.showUntrackedFiles no
  tags: dotfiles,tg,users,barerepo,update

- name: Git | Create symbolic link
  file:
    src: "{{ repo_dir }}"
    dest: "{{ work_dir }}.git"
    owner: tg
    group: wheel
    state: link
  tags: dotfiles,tg,users,barerepo